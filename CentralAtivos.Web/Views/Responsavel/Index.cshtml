<link href="https://cdn.datatables.net/v/dt/dt-1.10.18/b-1.5.6/b-colvis-1.5.6/cr-1.5.0/datatables.min.css" rel="stylesheet" type="text/css" />
<link href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css" rel="stylesheet" type="text/css" />
<link href="https://cdn.datatables.net/buttons/1.6.1/css/buttons.dataTables.min.css" rel="stylesheet" type="text/css" />

<style>
    tfoot input {
        width: 100%;
        padding: 3px;
        box-sizing: border-box;
    }
</style>

<div class="kt-content  kt-grid__item kt-grid__item--fluid" id="responsavel-list">
    <div class="kt-portlet kt-portlet--mobile">
        <div class="kt-portlet__head kt-portlet__head--lg">
            <div class="kt-portlet__head-label">
                <h3 class="kt-portlet__head-title">
                    Lista de Responsaveis Cadastrados
                </h3>
            </div>
            <div class="kt-portlet__head-toolbar">
                <div class="kt-portlet__head-wrapper">
                    <div class="kt-portlet__head-actions">
                        <button class="btn btn-success btn-brand btn-elevate btn-icon-sm" data-toggle="modal" data-target="#modalUpload" v-if="permissao.indexOf('POST') >= 0">
                            <i class="la la-upload"></i> Upload
                        </button>
                        <a href="~/responsavel/novo" class="btn btn-brand btn-elevate btn-icon-sm" v-if="permissao.indexOf('POST') >= 0">
                            <i class="la la-plus"></i> Novo Responsavel
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <div class="kt-portlet__body">

            <!--begin: Datatable -->
            <div id="kt_table_1_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">
                <div class="row">
                    <div class="col-sm-12">
                        <table class="table table-striped- table-bordered" id="kt_table_1">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Matrícula</th>
                                    <th>Nome</th>
                                    <th>Cargo</th>
                                    <th>Login Vinculado</th>
                                    <th>Ações</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="resp in responsaveis">
                                    <td align="center">{{resp.ID}}</td>
                                    <td>{{resp.Matricula}}</td>
                                    <td>{{resp.Nome}}</td>
                                    <td>{{resp.Cargo}}</td>
                                    <td v-if="resp.Usuario==null">-</td>
                                    <td v-else>{{resp.Usuario.Nome}} ({{resp.Usuario.Email}})</td>
                                    <td>
                                        <a v-bind:href="'responsavel/editar/' + resp.ID" class="btn btn-primary btn-sm" title="Editar" v-if="permissao.indexOf('PUT') >= 0">&nbsp;&nbsp;<i class="fas fa-edit fa-lg"></i></a>
                                        <button type="button" class="btn btn-danger btn-sm" v-on:click="excluir(resp.ID)" title="Excluir" v-if="permissao.indexOf('DELETE') >= 0">&nbsp;&nbsp;<i class="fas fa-trash-alt fa-lg"></i></button>
                                    </td>
                                </tr>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>ID</th>
                                    <th>Matrícula</th>
                                    <th>Nome</th>
                                    <th>Cargo</th>
                                    <th>Login Vinculado</th>
                                    <th></th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
            <!--end: Datatable -->
        </div>
    </div>

    <div class="modal" tabindex="-1" role="dialog" id="modalUpload">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Upload de Arquivos</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form class="modal-body" v-on:submit.prevent="upload">
                    <h5>1. Baixe o Modelo</h5>
                    <p><a href="~/uploads/modelos/modelo-responsaveis.csv">Clique aqui para baixar o arquivo modelo</a></p>
                    <hr />
                    <br />
                    <h5>2. Preecha os dados</h5>
                    <br />
                    <hr />
                    <br />
                    <h5>3. Faça o Upload do Arquivo</h5>
                    <br />
                    <p><input type="file" required id="file" ref="file" /></p>
                    <br />
                    <hr />
                    <h5>4. Selecione uma Regra de Upload</h5>
                    <br />
                    <p>
                        <select class="form-control" id="regraUpload">
                            <option value="1">1. Atualizar: Atualiza os registros atuais e inclui novos</option>
                            <option value="2">2. Incluir: Apenas inclui novos</option>
                            <option value="3">3. Limpar: Limpa a base antiga e cria uma nova</option>
                        </select>
                    </p>
                    <br />
                    <hr />
                    <button class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                    <button class="btn btn-success">Salvar</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="https://cdn.datatables.net/v/dt/dt-1.10.18/b-1.5.6/b-colvis-1.5.6/cr-1.5.0/datatables.min.js" type="text/javascript"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.flash.min.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js" type="text/javascript"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.html5.min.js" type="text/javascript"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.print.min.js" type="text/javascript"></script>
    <script type="text/javascript">

        new Vue({
            el: '#responsavel-list',
            data() {
                return {
                    empresaID: 0,
                    responsaveis: {},
                    errors: {},
                    permissao: ''
                };
            },

            methods: {

                listar() {

                    api.get('responsavel/getByEmpresaID/' + this.empresaID, true)
                        .then(({ data, errors }) => {
                            this.errors = errors || {};
                            if (errors) {
                                return;
                            }
                            this.responsaveis = data;
                        });

                },

                excluir(id) {

                    var self = this;

                    Swal.fire({
                        title: 'Deseja realmente excluir esse Responsável?',
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Sim, Pode excluir.'
                    }).then((result) => {
                        if (result.value) {

                            axios.request({
                                url: config.baseURL + 'responsavel/' + id,
                                method: 'delete',
                                headers: {
                                    "Authorization": "Bearer " + JSON.parse(window.localStorage.getItem('token'))
                                }
                            }).then(function () {

                                Swal.fire({
                                    type: 'success',
                                    title: 'Parabéns',
                                    text: 'Responsável excluído com sucesso',
                                    showConfirmButton: false,
                                    timer: 2000,
                                    onClose: () => {

                                        self.listar();
                                    }
                                });

                            }).catch(function (erro) {

                                Swal.fire({
                                    type: 'error',
                                    title: 'Erro',
                                    text: erro.response.data.Message
                                });
                            });
                        }
                    });
                },

                upload() {

                    var self = this;

                    let formData = new FormData();

                    formData.append('file', self.$refs.file.files[0]);

                    axios.request({
                        url: config.baseURL + 'upload/novo/' + localStorage.getItem('empresaID') + '/4/' + $('#regraUpload').val(),
                        data: formData,
                        method: 'POST',
                        headers: {
                            "Authorization": "Bearer " + JSON.parse(window.localStorage.getItem('token'))
                        }
                    }).then(function (resp) {

                        self.processar(resp.data.ID);

                    }).catch(function (erro) {

                        Swal.fire({
                            type: 'error',
                            title: 'Erro',
                            text: erro.response.data.Message
                        });
                    });
                },

                processar(id) {

                    var self = this;

                    axios.request({
                        url: config.baseURL + 'upload/processar/' + id,
                        method: 'POST',
                        headers: {
                            "Authorization": "Bearer " + JSON.parse(window.localStorage.getItem('token'))
                        }
                    }).then(function () {

                        Swal.fire({
                            type: 'success',
                            title: 'Parabéns',
                            text: 'Upload Enviado com Sucesso. Você pode conferir o Status do Processamento na Tela de Administração de Uploads.',
                            showConfirmButton: false,
                            timer: 4000,
                            onClose: () => {

                                clearInterval(timerInterval);
                                self.listar();

                                $('#modalUpload').modal('hide');
                            }
                        });
                    }).catch(function (erro) {

                        Swal.fire({
                            type: 'error',
                            title: 'Erro',
                            text: erro.response.data.Message
                        });
                    });
                }

            },
            mounted() {

                let self = this;

                api.get('permissao/getByFuncionalidade/responsavel', true)
                    .then(({ data, errors }) => {
                        self.errors = errors || {};
                        if (errors) {
                            return;
                        }

                        self.permissao = data;

                        if (data.indexOf('GET') < 0) {

                            Swal.fire({
                                type: 'warning',
                                title: 'Acesso Negado',
                                html: 'Você não tem acesso à essa funcionalidade.</br>Entre em contato com o Administrador do Sistema',
                                showConfirmButton: false,
                                timer: 5000,
                                onClose: () => {

                                    history.go('-1');
                                }
                            });
                        }
                        else {

                            self.empresaID = localStorage.getItem('empresaID');
                            self.listar();
                        }
                    });

            },

            watch: {
                responsaveis() {
                    if (this.dt) {
                        this.dt.destroy();
                    }
                    this.$nextTick(() => {
                        this.dt = $('#kt_table_1').DataTable({
                            //colReorder: true,
                            dom: 'Bfrtip',
                            buttons: [
                                {
                                    extend: 'csv',
                                    text: 'CSV'
                                },
                                {
                                    extend: 'excel',
                                    text: 'XLS'
                                },
                                {
                                    extend: 'copy',
                                    text: 'Copiar os Dados'
                                },
                                {
                                    extend: 'colvis',
                                    text: 'Colunas Disponíveis'
                                }
                            ],

                            "oLanguage": {

                                "sSearch": "Pesquisar:",

                                "oPaginate": {

                                    "sPrevious": "Anterior",
                                    "sNext": "Próximo"
                                },

                                "sInfo": "Mostrando _START_ até _END_ de _TOTAL_ registros"

                            },

                        });

                        $('#kt_table_1 tfoot th').not(':last').each(function () {
                            var title = $(this).text();
                            $(this).html('<input type="text" style="width: 100%" />');
                        });

                        this.dt.columns().every(function () {
                            var that = this;

                            $('input', this.footer()).on('keyup change clear', function () {
                                if (that.search() !== this.value) {
                                    that
                                        .search(this.value)
                                        .draw();
                                }
                            });
                        });

                        $('#kt_table_1 tfoot tr').appendTo('#kt_table_1 thead');
                    });

                }
            }
        });

    </script>
}