<link href="https://cdn.datatables.net/v/dt/dt-1.10.18/b-1.5.6/b-colvis-1.5.6/cr-1.5.0/datatables.min.css" rel="stylesheet" type="text/css" />
<link href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css" rel="stylesheet" type="text/css" />
<link href="https://cdn.datatables.net/buttons/1.6.1/css/buttons.dataTables.min.css" rel="stylesheet" type="text/css" />

<style>
    tfoot input {
        width: 100%;
        padding: 3px;
        box-sizing: border-box;
    }
</style>

<div id="inventario-list">
    <div class="kt-content  kt-grid__item kt-grid__item--fluid">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title">
                        Controle dos Inventários
                    </h3>
                </div>
                <div class="kt-portlet__head-toolbar">
                    <div class="kt-portlet__head-wrapper">
                        <div class="kt-portlet__head-actions">
                            <a href="~/inventario/novo" class="btn btn-brand btn-elevate btn-icon-sm" v-if="permissao.indexOf('POST') >= 0">
                                <i class="la la-plus"></i> Novo Inventário
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="kt-portlet__body">

                <!--begin: Datatable -->
                <div id="kt_table_1_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">
                    <div class="row">
                        <div class="col-sm-12">
                            <table class="table table-striped- table-bordered" id="kt_table_1" role="grid" aria-describedby="kt_table_1_info">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Código</th>
                                        <th>Nome</th>
                                        <th>Tipo</th>
                                        <th>Status</th>
                                        <th>Data de Cadastro</th>
                                        <th>Ações</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr v-for="(inventario, index) in inventarios">
                                        <td align="center">{{inventario.ID}}</td>
                                        <td align="center">{{inventario.Codigo}}</td>
                                        <td>{{inventario.Nome}}</td>
                                        <td align="center">{{inventario.Geral?'GERAL':'ROTATIVO'}}</td>
                                        <td align="center">{{inventario.Status.Nome}}</td>
                                        <td align="center">{{inventario.DataCadastroFormatada}}</td>
                                        <td>
                                            <button type="button" class="btn btn-secondary btn-sm" title="Configuração do Inventário" v-if="permissao.indexOf('PUT') >= 0" v-on:click="irParaConfig(inventario.ID)">&nbsp;<i class="fas fa-cog"></i></button>
                                            <button type="button" class="btn btn-secondary btn-sm" title="Controle de Placas" v-on:click="controlePlacas(inventario.ID)">&nbsp;<i class="fas fa-barcode"></i></button>
                                            <button type="button" class="btn btn-secondary btn-sm" title="Edição de Equipe" v-on:click="listarEquipe(inventario.ID)" v-if="permissao.indexOf('PUT') >= 0">&nbsp;<i class="fas fa-users"></i></button>
                                            <button type="button" class="btn btn-secondary btn-sm" title="Edição de Locais" v-if="!inventario.Geral && permissao.indexOf('PUT') >= 0" v-on:click="listarLocaisInventario(inventario.ID)">&nbsp;<i class="fas fa-building"></i></button>
                                        </td>
                                    </tr>
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th>ID</th>
                                        <th>Código</th>
                                        <th>Nome</th>
                                        <th>Tipo</th>
                                        <th>Status</th>
                                        <th>Data de Cadastro</th>
                                        <th></th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>

                <!--end: Datatable -->
            </div>
        </div>
    </div>

    <div class="modal" tabindex="-1" role="dialog" id="modalEquipe">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Inventários - Gestão de Equipe</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card">
                        <div class="card-header">
                            Para incluir, selecione usuário e perfil nos combos e clique em Incluir
                        </div>
                        <div class="card-body">
                            <form class="form-group row" v-on:submit.prevent="incluirMembro">
                                <div class="col-6">
                                    <select class="form-control" v-model="inventarioUsuario.UsuarioID" required>
                                        <option value="">- Selecione um Usuário -</option>
                                        <option v-bind:value="usuario.ID" v-for="usuario in usuarios">{{usuario.Nome}} ({{usuario.Perfil.Nome}})</option>
                                    </select>
                                </div>
                                <div class="col-4">
                                    <select class="form-control" v-model="inventarioUsuario.PerfilID" required>
                                        <option value="">- Selecione um Perfil -</option>
                                        <option v-bind:value="perfil.ID" v-for="perfil in perfis">{{perfil.Nome}}</option>
                                    </select>
                                </div>
                                <div class="col-2">
                                    <button type="submit" class="btn btn-primary"><i class="fas fa-plus"></i>&nbsp;Incluir&nbsp;&nbsp;</button>
                                </div>
                            </form>
                        </div>
                    </div>
                    <br />
                    <div class="card">
                        <div class="card-header">
                            Equipe Atribuida ao Inventário
                        </div>
                        <div class="card-body">
                            <table class="table table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th>Nome do Usuário</th>
                                        <th>Perfil</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr v-for="(membro, index) in equipe">
                                        <td>{{membro.Usuario.Nome}}</td>
                                        <td>{{membro.Perfil.Nome}}</td>
                                        <td>
                                            <button type="button" class="btn btn-danger btn-sm" title="Remover Usuário deste Inventário" v-on:click="RemoverUsuarioEquipe(index)">&nbsp;<i class="fas fa-trash"></i></button>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="modal" tabindex="-1" role="dialog" id="modalLocais">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Inventários - Gestão de Locais</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card">
                        <div class="card-header">
                            Para incluir, selecione um Local no combo e clique em Incluir
                        </div>
                        <div class="card-body">
                            <form class="form-group row" v-on:submit.prevent="incluirLocal">
                                <div class="col-4">
                                    <select class="form-control" v-on:change="listarLocais" v-model="filialID">
                                        <option value="0">- Selecione uma Filial -</option>
                                        <option v-bind:value="filial.ID" v-for="filial in filiais">{{filial.Nome}}</option>
                                    </select>
                                </div>
                                <div class="col-6">
                                    <select class="form-control" v-model="inventarioLocal.LocalID" required>
                                        <option value="">- Selecione um Local -</option>
                                        <option v-bind:value="local.ID" v-for="local in locais">{{local.CaminhoPao}}</option>
                                    </select>
                                </div>
                                <div class="col-2">
                                    <button type="submit" class="btn btn-primary"><i class="fas fa-plus"></i>&nbsp;Incluir&nbsp;&nbsp;</button>
                                </div>
                            </form>
                        </div>
                    </div>
                    <br />
                    <div class="card">
                        <div class="card-header">
                            Locais Atribuídos ao Inventário
                        </div>
                        <div class="card-body">
                            <table class="table table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th>Filial</th>
                                        <th>Local</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr v-for="(localInventario, index) in locaisInventario">
                                        <td>{{localInventario.Local.Filial.Nome}}</td>
                                        <td>{{localInventario.Local.CaminhoPao}}</td>
                                        <td>
                                            <button type="button" class="btn btn-danger btn-sm" title="Remover Local deste Inventário" v-on:click="RemoverLocalInventario(index)">&nbsp;<i class="fas fa-trash"></i></button>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts
{
    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="https://cdn.datatables.net/v/dt/dt-1.10.18/b-1.5.6/b-colvis-1.5.6/cr-1.5.0/datatables.min.js" type="text/javascript"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.flash.min.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js" type="text/javascript"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.html5.min.js" type="text/javascript"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.print.min.js" type="text/javascript"></script>
    <script type="text/javascript">

        new Vue({
            el: '#inventario-list',
            data() {
                return {
                    inventarios: {},
                    usuarios: {},
                    perfis: {},
                    equipe: {},
                    filiais: {},
                    locais: {},
                    locaisInventario: {},
                    errors: {},
                    inventarioUsuario: {
                        InventarioID: 0,
                        UsuarioID: '',
                        PerfilID: ''
                    },
                    inventarioLocal: {
                        InventarioID: 0,
                        LocalID: ''
                    },
                    filialID: 0,
                    permissao: ''
                };
            },

            methods: {

                listar() {

                    api.aguarde();

                    api.get('inventario/getByEmpresaID/' + localStorage.getItem('empresaID'), true)
                        .then(({ data, errors }) => {
                            this.errors = errors || {};
                            if (errors) {
                                return;
                            }
                            this.inventarios = data;

                            api.fecharAguarde();
                        });

                },

                listarUsuarios() {

                    api.get('usuario/getUsuarios', true)
                        .then(({ data, errors }) => {
                            this.errors = errors || {};
                            if (errors) {
                                return;
                            }
                            this.usuarios = data;
                        });

                },

                listarPerfis() {

                    api.get('perfil/getPerfis', true)
                        .then(({ data, errors }) => {
                            this.errors = errors || {};
                            if (errors) {
                                return;
                            }
                            this.perfis = data;
                        });

                },

                listarEquipe(id) {

                    this.inventarioUsuario.InventarioID = id;

                    api.get('inventarioUsuario/getByInventarioID/' + id, true)
                        .then(({ data, errors }) => {
                            this.errors = errors || {};
                            if (errors) {
                                return;
                            }
                            this.equipe = data;

                            $('#modalEquipe').modal('show');
                        });

                },

                listarFiliais() {

                    api.get('filial/getByEmpresaID/' + localStorage.getItem('empresaID'), true)
                        .then(({ data, errors }) => {
                            this.errors = errors || {};
                            if (errors) {
                                return;
                            }
                            this.filiais = data;
                        });

                },

                listarLocais() {

                    api.get('local/getAllByFilialID/' + this.filialID, true)
                        .then(({ data, errors }) => {
                            this.errors = errors || {};
                            if (errors) {
                                return;
                            }
                            this.locais = data;
                        });

                },

                listarLocaisInventario(id) {

                    this.inventarioLocal.InventarioID = id;

                    api.get('inventarioLocal/getByInventarioID/' + id, true)
                        .then(({ data, errors }) => {
                            this.errors = errors || {};
                            if (errors) {
                                return;
                            }
                            this.locaisInventario = data;

                            $('#modalLocais').modal('show');
                        });
                },

                incluirMembro() {

                    let self = this;

                    let urlReq = config.baseURL + 'inventarioUsuario';

                    let metodo = 'post';

                    axios.request({
                        url: urlReq,
                        method: metodo,
                        headers: {
                            "Authorization": "Bearer " + JSON.parse(window.localStorage.getItem('token'))
                        },
                        data: (self.inventarioUsuario)
                    }).then(function (data) {

                        Swal.fire({
                            type: 'success',
                            title: 'Parabéns',
                            text: 'Usuário atribuído com sucesso',
                            showConfirmButton: false,
                            timer: 2000,
                            onClose: () => {
                                clearInterval(timerInterval);
                                self.listarEquipe(self.inventarioUsuario.InventarioID);
                            }
                        });
                    }).catch(function (erro) {

                        Swal.fire({
                            type: 'error',
                            title: 'Erro',
                            text: erro.response.data.Message
                        });
                    });
                },

                incluirLocal() {

                    let self = this;

                    let urlReq = config.baseURL + 'inventarioLocal';

                    let metodo = 'post';

                    axios.request({
                        url: urlReq,
                        method: metodo,
                        headers: {
                            "Authorization": "Bearer " + JSON.parse(window.localStorage.getItem('token'))
                        },
                        data: (self.inventarioLocal)
                    }).then(function (data) {

                        Swal.fire({
                            type: 'success',
                            title: 'Parabéns',
                            text: 'Local atribuído com sucesso',
                            showConfirmButton: false,
                            timer: 2000,
                            onClose: () => {
                                clearInterval(timerInterval);
                                self.listarLocaisInventario(self.inventarioLocal.InventarioID);
                            }
                        });
                    }).catch(function (erro) {

                        Swal.fire({
                            type: 'error',
                            title: 'Erro',
                            text: erro.response.data.Message
                        });
                    });
                },

                RemoverUsuarioEquipe(index) {

                    let self = this;
                    let inventarioUsuario = self.equipe[index];

                    Swal.fire({
                        title: 'Deseja realmente excluir ' + inventarioUsuario.Usuario.Nome + ' do Inventário?',
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Sim, Pode excluir.',
                        cancelButtonText: 'Cancelar'
                    }).then((result) => {
                        if (result.value) {

                            axios.request({
                                url: config.baseURL + 'inventarioUsuario/' + inventarioUsuario.ID,
                                method: 'delete',
                                headers: {
                                    "Authorization": "Bearer " + JSON.parse(window.localStorage.getItem('token'))
                                }
                            }).then(function () {

                                Swal.fire({
                                    type: 'success',
                                    title: 'Parabéns',
                                    text: 'Usuário ' + inventarioUsuario.Usuario.Nome + ' removido da Equipe com sucesso',
                                    showConfirmButton: false,
                                    timer: 2000,
                                    onClose: () => {

                                        self.listarEquipe(inventarioUsuario.InventarioID);
                                    }
                                });

                            }).catch(function (erro) {

                                Swal.fire({
                                    type: 'error',
                                    title: 'Erro',
                                    text: erro.response.data.Message
                                });
                            });
                        }
                    });

                },

                RemoverLocalInventario(index) {

                    let self = this;
                    let inventarioLocal = self.locaisInventario[index];

                    Swal.fire({
                        title: 'Deseja realmente excluir o local ' + inventarioLocal.Local.CaminhoPao + ' do Inventário?',
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Sim, Pode excluir.',
                        cancelButtonText: 'Cancelar'
                    }).then((result) => {
                        if (result.value) {

                            axios.request({
                                url: config.baseURL + 'inventarioLocal/' + inventarioLocal.ID,
                                method: 'delete',
                                headers: {
                                    "Authorization": "Bearer " + JSON.parse(window.localStorage.getItem('token'))
                                }
                            }).then(function () {

                                Swal.fire({
                                    type: 'success',
                                    title: 'Parabéns',
                                    text: 'Local ' + inventarioLocal.Local.CaminhoPao + ' removido do Inventário com sucesso',
                                    showConfirmButton: false,
                                    timer: 2000,
                                    onClose: () => {

                                        self.listarLocaisInventario(self.inventarioLocal.InventarioID);
                                    }
                                });

                            }).catch(function (erro) {

                                Swal.fire({
                                    type: 'error',
                                    title: 'Erro',
                                    text: erro.response.data.Message
                                });
                            });
                        }
                    });

                },

                irParaConfig(id) {

                    window.location.href = config.baseURLWeb + '/inventario/configuracao/' + id;
                },

                controlePlacas(inventarioID) {

                    window.location.href = config.baseURLWeb + '/placa/index/' + inventarioID;
                }

            },
            mounted() {

                let self = this;

                api.get('permissao/getByFuncionalidade/inventario', true)
                    .then(({ data, errors }) => {
                        this.errors = errors || {};
                        if (errors) {
                            return;
                        }

                        self.permissao = data;

                        if (data.indexOf('GET') < 0) {

                            Swal.fire({
                                type: 'warning',
                                title: 'Acesso Negado',
                                html: 'Você não tem acesso à essa funcionalidade.</br>Entre em contato com o Administrador do Sistema',
                                showConfirmButton: false,
                                timer: 5000,
                                onClose: () => {

                                    history.go('-1');
                                }
                            });
                        }
                        else {

                            self.listar();
                            self.listarUsuarios();
                            self.listarPerfis();
                            self.listarFiliais();
                        }
                    });

            },

            watch: {
                inventarios() {
                    if (this.dt) {
                        this.dt.destroy();
                    }
                    this.$nextTick(() => {
                        this.dt = $('#kt_table_1').DataTable({
                            //colReorder: true,
                            dom: 'Bfrtip',
                            buttons: [
                                {
                                    extend: 'csv',
                                    text: 'CSV'
                                },
                                {
                                    extend: 'excel',
                                    text: 'XLS'
                                },
                                {
                                    extend: 'copy',
                                    text: 'Copiar os Dados'
                                },
                                {
                                    extend: 'colvis',
                                    text: 'Colunas Disponíveis'
                                }
                            ],

                            "oLanguage": {

                                "sSearch": "Pesquisar:",

                                "oPaginate": {

                                    "sPrevious": "Anterior",
                                    "sNext": "Próximo"
                                },

                                "sInfo": "Mostrando _START_ até _END_ de _TOTAL_ registros"

                            },

                        });

                        $('#kt_table_1 tfoot th').not(':last').each(function () {
                            var title = $(this).text();
                            $(this).html('<input type="text" style="width: 100%" />');
                        });

                        this.dt.columns().every(function () {
                            var that = this;

                            $('input', this.footer()).on('keyup change clear', function () {
                                if (that.search() !== this.value) {
                                    that
                                        .search(this.value)
                                        .draw();
                                }
                            });
                        });

                        $('#kt_table_1 tfoot tr').appendTo('#kt_table_1 thead');
                    });

                }
            }
        });

    </script>
}